function spin(pow2_count){ var count = 0; var max = 1<<pow2_count; for (var line=1; line<max; line++) { count++; } return {done:true, c:count}; }; function httpget(url) { return new Promise((resolve, reject) => { setTimeout(function() { resolve({ done: true }); }, 10000); const lib = require('http'); const request = lib.get(url, (response) => { if (response.statusCode < 200 || response.statusCode > 299) { reject(new Error('Failed to load page, status code: ' + response.statusCode)); } const body = []; response.on('data', (chunk) => body.push(chunk)); response.on('end', () => resolve({done:true, code:response.statusCode})); }); request.on('error', (err) => reject(err)) }) }; function main(args) { if(!args){ return spin(0); } else{ if('spin' in args){ return spin(args.spin); } if('url' in args){ return httpget(args.url);}return spin(0);}};
